// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v5.29.3
// source: coupon_stream.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "coupon";

export interface StatusFilter {
  statuses: string[];
}

export interface CouponIssue {
  id: string;
  status: string;
  updatedAt: number;
}

export interface UserFilter {
  userId: string;
}

export interface MoreCouponRequest {
  id: string;
  userId: string;
  couponIssueId: string;
  createdAt: number;
  parentId: string;
}

export interface CouponStatusFilter {
  userId: string;
  status: string;
}

export interface UserCoupon {
  id: string;
  code: string;
  status: string;
  expireAt: number;
  purchasedAt: number;
  redeemedAt: number;
  purchaseCurrency: string;
  purchasePrice: number;
  userId: string;
  businessId: string;
  redeemedBySelfActivation: boolean;
}

export interface EmptyRequest {
}

export interface CouponIssueWithBusiness {
  couponIssueId: string;
  businessId: string;
  couponName: string;
  businessName: string;
  status: string;
}

export interface ActiveBusinessesStreamResponse {
  id: string;
  title: string;
  description: string;
  image: string;
  categories: string[];
  businessId: string;
  contractType: string;
}

export interface ActiveCouponStreamResponse {
  _id: string;
  redemptionInfo: RedemptionInfo | undefined;
  code: string;
  businessId: string;
  couponIssueId: string;
  redeemedBySelfActivation: boolean;
  purchasePrice: number;
  purchaseCurrency: string;
  userId: string;
  status: string;
  expireAt: Timestamp | undefined;
  createdAt: Timestamp | undefined;
  purchasedAt: Timestamp | undefined;
}

export interface RedemptionInfo {
  redeemedByBusinessManagerId: string;
  methodOfRedemption: string;
}

export interface Timestamp {
  seconds: number;
  nanos: number;
}

export const COUPON_PACKAGE_NAME = "coupon";

export interface CouponStreamServiceClient {
  streamCouponIssues(request: StatusFilter): Observable<CouponIssue>;

  streamActiveCoupons(request: UserFilter): Observable<ActiveCouponStreamResponse>;

  streamActiveBusinessesStream(request: EmptyRequest): Observable<ActiveBusinessesStreamResponse>;

  streamMoreCouponRequests(request: UserFilter): Observable<MoreCouponRequest>;

  getCouponsByStatus(request: CouponStatusFilter): Observable<UserCoupon>;

  activeCouponIssuesWithBusinessesStream(request: EmptyRequest): Observable<CouponIssueWithBusiness>;
}

export interface CouponStreamServiceController {
  streamCouponIssues(request: StatusFilter): Observable<CouponIssue>;

  streamActiveCoupons(request: UserFilter): Observable<ActiveCouponStreamResponse>;

  streamActiveBusinessesStream(request: EmptyRequest): Observable<ActiveBusinessesStreamResponse>;

  streamMoreCouponRequests(request: UserFilter): Observable<MoreCouponRequest>;

  getCouponsByStatus(request: CouponStatusFilter): Observable<UserCoupon>;

  activeCouponIssuesWithBusinessesStream(request: EmptyRequest): Observable<CouponIssueWithBusiness>;
}

export function CouponStreamServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [
      "streamCouponIssues",
      "streamActiveCoupons",
      "streamActiveBusinessesStream",
      "streamMoreCouponRequests",
      "getCouponsByStatus",
      "activeCouponIssuesWithBusinessesStream",
    ];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("CouponStreamService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("CouponStreamService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const COUPON_STREAM_SERVICE_NAME = "CouponStreamService";
